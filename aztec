#!/bin/bash

set -e

echo "Починаємо встановлення ноди Aztec..."

# Запитуємо у користувача параметри
read -p "Введіть L1_RPC_URL (ВАШ SEPOLIA RPC): " L1_RPC_URL
read -p "Введіть L1_CONSENSUS_URL (ВАШ SEPOLIA Beacon): " L1_CONSENSUS_URL
read -p "Введіть VALIDATOR_PRIVATE_KEY (ВАШ ПРИВАТНИЙ КЛЮЧ): " VALIDATOR_PRIVATE_KEY
read -p "Введіть COINBASE_ADDRESS (ВАШ АДРЕС 0x...): " COINBASE_ADDRESS

echo ""
echo "Крок 1/7: Встановлення Docker через офіційний репозиторій..."

# Оновлення списку пакетів і встановлення залежностей
sudo apt update
sudo apt install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

# Додаємо офіційний GPG ключ Docker
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# Додаємо Docker репозиторій
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Оновлення і встановлення Docker Engine
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Додаємо користувача в групу docker
sudo usermod -aG docker $USER

echo "Docker встановлено."

echo ""
echo "Крок 2/7: Встановлення додаткових утиліт..."

sudo apt install -y screen net-tools psmisc jq ufw nano

echo "Утиліти встановлено."

echo ""
echo "Крок 3/7: Встановлення AZTEC CLI..."

curl -fsSL https://install.aztec.network | bash

# Додаємо aztec в PATH для поточного та майбутніх сеансів
echo 'export PATH="$HOME/.aztec/bin:$PATH"' >> ~/.bashrc
export PATH="$HOME/.aztec/bin:$PATH"

echo "AZTEC CLI встановлено та додано в PATH."

echo ""
echo "Крок 4/7: Оновлення AZTEC до останньої версії тестнету..."

aztec-up alpha-testnet

echo "Оновлення завершено."

echo ""
echo "Крок 5/7: Отримуємо IP сервера..."

IP=$(curl -s https://api.ipify.org)
echo "IP сервера: $IP"

echo ""
echo "Крок 6/7: Створення скриптів запуску і зупинки ноди..."

# Скрипт запуску
cat > $HOME/start_aztec_node.sh << EOL
#!/bin/bash
export PATH=\$PATH:\$HOME/.aztec/bin
aztec start --node --archiver --sequencer --auto-update config-and-version \\
  --network alpha-testnet \\
  --port 8080 \\
  --l1-rpc-urls $L1_RPC_URL \\
  --l1-consensus-host-urls $L1_CONSENSUS_URL \\
  --sequencer.validatorPrivateKey $VALIDATOR_PRIVATE_KEY \\
  --sequencer.coinbase $COINBASE_ADDRESS \\
  --p2p.p2pIp $IP
EOL
chmod +x $HOME/start_aztec_node.sh

# Скрипт безперервного запуску (авторестарт)
cat > $HOME/run_forever.sh << EOL
#!/bin/bash
while true; do
  ./start_aztec_node.sh
  echo "Нода зупинилась. Перезапуск через 90 секунд..."
  sleep 90
done
EOL
chmod +x $HOME/run_forever.sh

# Скрипт зупинки ноди (завершує screen сесію)
cat > $HOME/stop_aztec_node.sh << EOL
#!/bin/bash
screen -S aztec -X quit
echo "Нода зупинена."
EOL
chmod +x $HOME/stop_aztec_node.sh

echo ""
echo "Крок 7/7: Завершення. Нода готова."

echo ""
echo "Для запуску ноди в сесії screen натисніть 1"
echo "Для зупинки ноди натисніть 2"
read -p "Ваш вибір (1 або 2): " choice

if [[ "$choice" == "1" ]]; then
    if screen -list | grep -q "\.aztec"; then
        echo "Сесія screen 'aztec' вже запущена."
    else
        echo "Створюємо сесію screen 'aztec' і запускаємо ноду..."
        screen -dmS aztec bash -c "$HOME/run_forever.sh"
        echo "Нода запущена."
    fi
elif [[ "$choice" == "2" ]]; then
    echo "Зупиняємо ноду..."
    $HOME/stop_aztec_node.sh
else
    echo "Невірний вибір. Вихід."
fi

#echo "ВАЖЛИВО: Якщо ви тільки що додали себе в групу docker, щоб зміни вступили в силу — вийдіть із системи і зайдіть знову."
